<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="page_guide_usingservice" kind="page">
    <compoundname>page_guide_usingservice</compoundname>
    <title>Using ADLX in a system service application</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>While ADLX cannot be used directly in a system service application, its functionality can be accessed in a system service application through a user mode process. A communication mechanism between the user mode process and the system service, such as shared memory, will provide the ADLX functionality to the system service.</para>
<para>To use ADLX in a system service,<orderedlist>
<listitem><para>Create a system service application.</para>
<para><bold>Note:</bold> For more information on how to create a system service in C++, see <ref refid="domain_cpp_sample_servicecall" kindref="compound">ServiceCall C++ sample</ref>. For more information on how to create a system service in C, see <ref refid="domain_c_sample_servicecall" kindref="compound">ServiceCall C sample</ref>.</para>
</listitem><listitem><para>In the system service, start a thread to complete the service work, such as ServiceWorkerThread.</para>
</listitem><listitem><para>On the ServiceWorkerThread, get the token of the current process to create a user process using CreateProcessAsUserW.</para>
<para><bold>Note:</bold> For more information on how to create a user process into a service application in C++, see <ref refid="cpp_sample_userprocess" kindref="compound">UserProcess C++ sample</ref>. For more information on how to create a user process into a service application in C, see <ref refid="c_sample_userprocess" kindref="compound">UserProcess C sample</ref>.</para>
</listitem><listitem><para>In user mode, process load ADLX and implement the desired functionality.</para>
</listitem><listitem><para>In user mode, process implement a communication mechanism suitable for communicating with the system service – such as shared memory – and tie the ADLX data with the communication mechanism.</para>
</listitem><listitem><para>Run the user mode process and the service application.</para>
</listitem></orderedlist>
</para>
<para>For more information, see <ref refid="domain_cpp_sample_servicecall" kindref="compound">GPUServiceCall C++ samples</ref> and <ref refid="domain_c_sample_servicecall" kindref="compound">GPUServiceCall C samples</ref>. </para>
    </detaileddescription>
    <location file="D:/AMD_Git/adlx_release/drivers/ADLX/docs/Config/ADLXProgrammingGuide/servicecall.md"/>
  </compounddef>
</doxygen>
