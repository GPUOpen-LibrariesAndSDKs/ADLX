<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="page_guide__compatibility" kind="page">
    <compoundname>page_guide_Compatibility</compoundname>
    <title>Compatibility</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>ADLX features forward and backward compatibility for ADLX dependent applications, including compatibility for system installed AMD drivers. An application using ADLX will run as expected when installed on a system with a newer AMD driver version. If the application is installed on a system with an older AMD driver version, the application will run with reduced functionality and support for some interfaces.</para>
<para>When new functionalities are introduced, they are provided in new interfaces. ADLX interfaces are locked and do not change; all in-application ADLX code will continue to compile throughout future versions of the ADLX SDK.<linebreak/>
</para>
<para><bold>Note</bold>: ADLX SDK documentation demonstrates how to code a third-party application for unsupported interfaces.</para>
<para><heading level="2">ADLX GPU Support</heading>
</para>
<para><itemizedlist>
<listitem><para>Non-AMD GPUs are not supported.</para>
</listitem><listitem><para>Some legacy AMD GPUs may not be supported.</para>
</listitem><listitem><para>The default ADLX initialization considers backwards compatibility for legacy driver versions an unsupported feature, as the application will run with reduced functionality and support for some interfaces.</para>
</listitem><listitem><para>A recommended method to initialize ADLX using a legacy GPU and/or driver versions is to program the application to specifically use the legacy AMD GPU and driver.<linebreak/>
 <bold>Note</bold>: This method may not be applicable to all legacy AMD GPUs and driver versions.<linebreak/>
</para>
<para>For more information, see <ref refid="page_cpp_help_initialize" kindref="compound">Initialize</ref> / <ref refid="page_cpp_help_initialize_with_incompatible_driver" kindref="compound">InitializeWithIncompatibleDriver</ref> helper for C++ and <ref refid="page_c_help_a_d_l_x_helper__initialize" kindref="compound">ADLXHelper_Initialize</ref> / <ref refid="page_c_help_a_d_l_x_helper__initialize_with_incompatible_driver" kindref="compound">ADLXHelper_InitializeWithIncompatibleDriver</ref> helper for C.<linebreak/>
</para>
<para>For information about initialization function, see the <ref refid="page__a_d_l_x_initialize__fn" kindref="compound">ADLXInitialize_Fn</ref> function.</para>
</listitem><listitem><para>When using ADLX along with ADL on legacy GPUs and drivers, ADLX will replicate the existing ADL configuration for that application. As an example, if the ADL application was configured to utilize the legacy GPU and driver, ADLX will also utilize the legacy GPU and driver. </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <location file="D:/AMD_Git/adlx_release/drivers/ADLX/docs/Config/ADLXProgrammingGuide/compatibility.md"/>
  </compounddef>
</doxygen>
