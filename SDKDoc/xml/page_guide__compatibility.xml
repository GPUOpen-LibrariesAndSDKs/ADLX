<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="page_guide__compatibility" kind="page">
    <compoundname>page_guide_Compatibility</compoundname>
    <title>Compatibility</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The ADLX is designed to deliver forwards and backwards compatibility between applications that uses ADLX, and the AMD driver installed on the system where these applications run. An application that uses ADLX will run as expected when installed on a system with a newer version of AMD driver. If the application is installed on a system with an older AMD driver version, it will run with reduced functionality and support for some interfaces.</para>
<para>ADLX interfaces are locked and do not change; new functionalities are provided in new interfaces. All the ADLX code written in applications will continue to compile after changing to any future version of the ADLX SDK. The ADLX SDK Documentation demonstrates how to code a third-party application to handle interfaces that are not supported.</para>
<para><heading level="2">ADLX GPU Support</heading>
</para>
<para><itemizedlist>
<listitem><para>ADLX does not support non-AMD GPUs.</para>
</listitem><listitem><para>ADLX does not support some legacy AMD GPUs, as the default ADLX initialization considers legacy driver versions as unsupported.</para>
</listitem><listitem><para>A recommended method to initialize ADLX with legacy GPU and driver version is to program the application to use the legacy AMD GPU and driver. However, we cannot guarantee that this method is applicable to all legacy AMD GPUs and driver versions. For more information, see <ref refid="page_cpp_help_initialize" kindref="compound">Initialize</ref> / <ref refid="page_cpp_help_initialize_with_incompatible_driver" kindref="compound">InitializeWithIncompatibleDriver</ref> helper for C++ and <ref refid="page_c_help_a_d_l_x_helper__initialize" kindref="compound">ADLXHelper_Initialize</ref> / <ref refid="page_c_help_a_d_l_x_helper__initialize_with_incompatible_driver" kindref="compound">ADLXHelper_InitializeWithIncompatibleDriver</ref> helper for C. For information about initialization function, see <ref refid="page__a_d_l_x_initialize__fn" kindref="compound">ADLXInitialize_Fn</ref> function.</para>
</listitem><listitem><para>When using ADLX along with ADL on legacy GPUs and drivers, ADLX follows the existing configuration that ADL uses in that application. For example, if the application using ADL is configured to consider the legacy GPU and driver, ADLX also considers the legacy GPU and driver. </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <location file="D:/03_AMDgit/22.40/drivers/ADLX/docs/Config/ADLXProgrammingGuide/compatibility.md"/>
  </compounddef>
</doxygen>
