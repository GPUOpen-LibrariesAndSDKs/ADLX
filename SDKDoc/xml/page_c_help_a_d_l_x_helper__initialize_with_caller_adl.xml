<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="page_c_help_a_d_l_x_helper__initialize_with_caller_adl" kind="page">
    <compoundname>page_cHelpADLXHelper_InitializeWithCallerAdl</compoundname>
    <title>ADLXHelper_InitializeWithCallerAdl</title>
    <briefdescription>
<para>Initializes ADLX with an ADL context. </para>
    </briefdescription>
    <detaileddescription>
<para>Initializes ADLX with an ADL context.</para>
<para><heading level="2">Syntax </heading>
</para>
<para><preformatted>
 <ref refid="group__enumerations_1ga9306b05f15578edbf79b649dd612b8c0" kindref="member">ADLX_RESULT</ref> ADLXHelper_InitializeWithCallerAdl (adlx_handle adlContext, <ref refid="group___a_d_l_x_defs_1ga7301579b153c3612dca5c442e5f2dd45" kindref="member">ADLX_ADL_Main_Memory_Free</ref> adlMainMemoryFree)
 </preformatted> <heading level="2">Parameters </heading>
</para>
<para><variablelist>
<varlistentry><term></term></varlistentry>
<listitem><para><table rows="1" cols="5"><row>
<entry thead="no" class="paramidx"><para>1.</para>
</entry><entry thead="no" class="paramdir"><para>[in]</para>
</entry><entry thead="no" class="paramname"><para>adlContext</para>
</entry><entry thead="no" class="paramtype"><para>adlx_handle</para>
</entry><entry thead="no"><para>The ADL context. </para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
<variablelist>
<varlistentry><term></term></varlistentry>
<listitem><para><table rows="1" cols="5"><row>
<entry thead="no" class="paramidx"><para>2.</para>
</entry><entry thead="no" class="paramdir"><para>[in]</para>
</entry><entry thead="no" class="paramname"><para>adlMainMemoryFree</para>
</entry><entry thead="no" class="paramtype"><para><ref refid="group___a_d_l_x_defs_1ga7301579b153c3612dca5c442e5f2dd45" kindref="member">ADLX_ADL_Main_Memory_Free</ref></para>
</entry><entry thead="no"><para>The callback handler of the memory deallocation function. </para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><heading level="2">Return Value </heading>
</para>
<para>If <bold>ADLXHelper_InitializeWithCallerAdl</bold> is successfully executed, <bold>ADLX_OK</bold> is returned.<linebreak/>
 If <bold>ADLXHelper_InitializeWithCallerAdl</bold> is not successfully executed, an error code is returned.<linebreak/>
 If ADLX was previously successfully initialized with any of the Initialize versions, <bold>ADLX_ALREADY_INITIALIZED</bold> is returned.<linebreak/>
 Refer to <ref refid="group__enumerations_1ga9306b05f15578edbf79b649dd612b8c0" kindref="member">ADLX_RESULT</ref> for success codes and error codes.<linebreak/>
</para>
<para><heading level="2">Remarks </heading>
</para>
<para>This function is used when an application also uses ADL. A typical scenario is the application is transitioning from ADL to ADLX with some programming already completed with ADL.<linebreak/>
 In such case, the application shall pass the parameters in this function that corresponds to the current ADL initialization already in use, which are: an ADL context and a callback for the memory deallocation when ADL was initialized.<linebreak/>
 For more information for initializing ADLX with an ADL context, refer to <ref refid="page_guide_use__a_d_l_x" kindref="compound">Using ADLX in an ADL application</ref>.<linebreak/>
</para>
<para><heading level="2">Requirements </heading>
</para>
<para><table rows="2" cols="2"><row>
<entry thead="no"><para>Header</para>
</entry><entry thead="no"><para>include &quot;ADLXHelper/Windows/C/ADLXHelper.h&quot;</para>
</entry></row>
<row>
<entry thead="no"><para>Minimum version</para>
</entry><entry thead="no"><para>1.0</para>
</entry></row>
</table>
</para>
    </detaileddescription>
    <location file="D:/AMD_Git/adlx_release/drivers/ADLX/SDK/ADLXHelper/Windows/C/ADLXHelper.h"/>
  </compounddef>
</doxygen>
