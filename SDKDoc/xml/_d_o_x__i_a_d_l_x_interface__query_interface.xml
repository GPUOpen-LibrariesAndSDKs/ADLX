<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_d_o_x__i_a_d_l_x_interface__query_interface" kind="page">
    <compoundname>DOX_IADLXInterface_QueryInterface</compoundname>
    <title>QueryInterface</title>
    <briefdescription>
<para>Retrieves reference counted interfaces to an object. </para>
    </briefdescription>
    <detaileddescription>
<para>Retrieves reference counted interfaces to an object.</para>
<para><heading level="2">Syntax </heading>
</para>
<para><preformatted>
 <ref refid="group__enumerations_1ga9306b05f15578edbf79b649dd612b8c0" kindref="member">ADLX_RESULT</ref>    QueryInterface (const wchar_t* interfaceId, void** ppInterface)
 </preformatted></para>
<para><heading level="2">Parameters </heading>
</para>
<para><variablelist>
<varlistentry><term></term></varlistentry>
<listitem><para><table rows="1" cols="5"><row>
<entry thead="no" class="paramidx"><para>1.</para>
</entry><entry thead="no" class="paramdir"><para>[in] </para>
</entry><entry thead="no" class="paramname"><para>interfaceId</para>
</entry><entry thead="no" class="paramtype"><para>const wchar_t*</para>
</entry><entry thead="no"><para>The identifier of the interface being requested. </para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
<variablelist>
<varlistentry><term></term></varlistentry>
<listitem><para><table rows="1" cols="5"><row>
<entry thead="no" class="paramidx"><para>2.</para>
</entry><entry thead="no" class="paramdir"><para>[out]</para>
</entry><entry thead="no" class="paramname"><para>ppInterface</para>
</entry><entry thead="no" class="paramtype"><para>void**</para>
</entry><entry thead="no"><para>The address of a pointer to the returned interface. If the interface is not successfully returned, the method sets the dereferenced address <bold>*ppInterface</bold> to <bold>nullptr</bold>. </para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><heading level="2">Return Value </heading>
</para>
<para>If <bold>QueryInterface</bold> is successfully called, <bold>ADLX_OK</bold> is returned. <linebreak/>
 If the requested interface is not supported, <bold>ADLX_UNKNOWN_INTERFACE</bold> is returned. <linebreak/>
 If the <bold>*ppInterface</bold> parameter is <bold>nullptr</bold>, <bold>ADLX_INVALID_ARGS</bold> is returned. <linebreak/>
 If <bold>QueryInterface</bold> is not successfully called, an error code is returned. <linebreak/>
 Refer <ref refid="group__enumerations_1ga9306b05f15578edbf79b649dd612b8c0" kindref="member">ADLX_RESULT</ref> for success codes and error codes.</para>
<para><heading level="2">Remarks </heading>
</para>
<para>To ensure ADLX SDK backwards and forward compatibility the ADLX interfaces are locked, they do not change in subsequent versions of the driver. When an ADLX interface needs another functionality, an extension interface is provided. The extension interface is obtained from the initial interface using <bold>QueryInterface</bold>. The documentation for the extension interface shows how to obtain it.<linebreak/>
 The returned interface must be discarded with <ref refid="_d_o_x__i_a_d_l_x_interface__release" kindref="compound">Release</ref> when no longer needed.</para>
<para><heading level="2">Additional Info </heading>
</para>
<para>In C++ when using a smart pointer for the returned interface there is no need to call <bold>QueryInterface</bold> and <ref refid="_d_o_x__i_a_d_l_x_interface__release" kindref="compound">Release</ref> because the smart pointer calls them internally.</para>
<para><heading level="2">Requirements </heading>
</para>
<para><table rows="2" cols="2"><row>
<entry thead="no"><para>Header</para>
</entry><entry thead="no"><para>include &quot;ADLXDefines.h&quot;</para>
</entry></row>
<row>
<entry thead="no"><para>Minimum version</para>
</entry><entry thead="no"><para>1.0</para>
</entry></row>
</table>
</para>
    </detaileddescription>
    <location file="D:/AMD_Git/adlx_release/drivers/ADLX/SDK/Include/ADLXDefines.h"/>
  </compounddef>
</doxygen>
