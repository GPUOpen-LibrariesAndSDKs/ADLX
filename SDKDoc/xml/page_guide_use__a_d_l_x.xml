<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="page_guide_use__a_d_l_x" kind="page">
    <compoundname>page_guide_use_ADLX</compoundname>
    <title>Using ADLX in an application</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The ADLX SDK provides different versions of the ADLX initialization function to use when you load ADLX into a new application or into an existing application that uses ADL.</para>
<para><heading level="2">Prerequisite(s)</heading>
</para>
<para><itemizedlist>
<listitem><para>Install the ADLX SDK before programming an application with ADLX. Native support is provided for C, and C++.</para>
</listitem><listitem><para>Build the ADLX binding wrapper when programming in C#, Java, or Python.</para>
</listitem></itemizedlist>
</para>
<para><heading level="2">To access the ADLX System interface</heading>
</para>
<para><orderedlist>
<listitem><para>Program an application to load the ADLX library.</para>
</listitem><listitem><para>Load the ADLX library.</para>
</listitem><listitem><para>Initialize ADLX by locating and calling the pointer to the respective function.</para>
<para><bold>Result:</bold> Access to the ADLX System interface is provided on a successful Initialization call.</para>
<para><bold>Note:</bold> There are different ADLX initialization versions that correspond to a specific function. Program your application to only find one function pointer to call a specific ADLX Initialization function that best suits your requirement.</para>
</listitem></orderedlist>
</para>
<para><heading level="2">Context</heading>
</para>
<para>The ADLX System interface is the gateway to all available ADLX interfaces. These interfaces provide the methods required to access all the features available in the AMD driver. The ADLX Helper code provided with the ADLX SDK simplifies the loading and unloading of ADLX by finding, and then calling the required function pointers whenever ADLX is initialized.</para>
<para><heading level="2">Using ADLX in a new application</heading>
</para>
<para>You can program a new application to use ADLX to work with the AMD driver. You can load and initialize ADLX in a new application by accessing the <bold>ADLXInitialize</bold> function.</para>
<para><itemizedlist>
<listitem><para>For C++, C#, Java, and Python – Through the ADLX Helper class <ref refid="page_cpp_help_initialize" kindref="compound">Initialize</ref> method.</para>
</listitem><listitem><para>For C – Through ADLX Helper code, <ref refid="page_c_help_a_d_l_x_helper__initialize" kindref="compound">ADLXHelper_Initialize</ref> function.</para>
</listitem><listitem><para>Directly – Without the ADLX Helper code, through <ref refid="page__a_d_l_x_initialize__fn" kindref="compound">ADLXInitialize_Fn</ref> function pointer.</para>
</listitem></itemizedlist>
</para>
<para><heading level="2">Using ADLX in an ADL application</heading>
</para>
<para>An existing application that uses ADL can be programmed to support ADLX without rewriting the entire code. ADLX provides <bold>ADLXInitializeWithCallerADL</bold> as an initialization function to load and initialize ADLX in an application that already uses ADL. You can load and initialize ADLX in a application that uses ADL by accessing the <bold>ADLXInitializeWithCallerADL</bold> function:</para>
<para><itemizedlist>
<listitem><para>For C++ – Through the ADLX Helper class, <ref refid="page_cpp_help_initialize_with_caller_adl" kindref="compound">InitializeWithCallerAdl</ref> method.</para>
</listitem><listitem><para>For C – Through the ADLX Helper code, <ref refid="page_c_help_a_d_l_x_helper__initialize_with_caller_adl" kindref="compound">ADLXHelper_InitializeWithCallerAdl</ref> function.</para>
</listitem><listitem><para>Directly – Without the ADLX Helper code, through <ref refid="page__a_d_l_x_initialize_with_caller_adl__fn" kindref="compound">ADLXInitializeWithCallerAdl_Fn</ref> function pointer.</para>
</listitem></itemizedlist>
</para>
<para>Pass the ADL context and the <ref refid="group___a_d_l_x_defs_1ga7301579b153c3612dca5c442e5f2dd45" kindref="member">ADLX_ADL_Main_Memory_Free</ref> function (previously passed during ADL initialization) as input parameters into <bold>ADLXInitializeWithCallerADL</bold>. The <ref refid="_d_o_x__i_a_d_l_mapping" kindref="compound">IADLMapping</ref> interface is provided as output parameter. This interface provides data mapping between ADL and ADLX for a specific entity (GPU, Display or Desktop). </para>
    </detaileddescription>
    <location file="D:/AMD_Git/adlx_release/drivers/ADLX/docs/Config/ADLXProgrammingGuide/useADLXinApp.md"/>
  </compounddef>
</doxygen>
