<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="group__typedefs" kind="group">
    <compoundname>typedefs</compoundname>
    <title>ADLX Primitive Data Types</title>
    <briefdescription>
<para>This section provides definitions for ADLX primitive data types. </para>
    </briefdescription>
    <detaileddescription>
<para><heading level="2">Requirements </heading>
</para>
<para><table rows="2" cols="2"><row>
<entry thead="no"><para>Header</para>
</entry><entry thead="no"><para>include &quot;ADLXDefines.h&quot;</para>
</entry></row>
<row>
<entry thead="no"><para>Minimum version</para>
</entry><entry thead="no"><para>1.0</para>
</entry></row>
</table>
</para>
<para><table rows="18" cols="2"><row>
<entry thead="yes" align='right'><para>ADLX Type   </para>
</entry><entry thead="yes" align='left'><para>Description    </para>
</entry></row>
<row>
<entry thead="no" align='right'><para>adlx_int64   </para>
</entry><entry thead="no" align='left'><para>adlx_int64 is typedef of int64_t    </para>
</entry></row>
<row>
<entry thead="no" align='right'><para>adlx_int32   </para>
</entry><entry thead="no" align='left'><para>adlx_int32 is typedef of int32_t    </para>
</entry></row>
<row>
<entry thead="no" align='right'><para>adlx_int16   </para>
</entry><entry thead="no" align='left'><para>adlx_int16 is typedef of int16_t    </para>
</entry></row>
<row>
<entry thead="no" align='right'><para>adlx_int8   </para>
</entry><entry thead="no" align='left'><para>adlx_int8 is typedef of int8_t    </para>
</entry></row>
<row>
<entry thead="no" align='right'><para>adlx_uint64   </para>
</entry><entry thead="no" align='left'><para>adlx_uint64 is typedef of uint64_t    </para>
</entry></row>
<row>
<entry thead="no" align='right'><para>adlx_uint32   </para>
</entry><entry thead="no" align='left'><para>adlx_uint32 is typedef of uint32_t    </para>
</entry></row>
<row>
<entry thead="no" align='right'><para>adlx_uint16   </para>
</entry><entry thead="no" align='left'><para>adlx_uint16 is typedef of uint16_t    </para>
</entry></row>
<row>
<entry thead="no" align='right'><para>adlx_uint8   </para>
</entry><entry thead="no" align='left'><para>adlx_uint8 is typedef of uint8_t    </para>
</entry></row>
<row>
<entry thead="no" align='right'><para>adlx_size   </para>
</entry><entry thead="no" align='left'><para>adlx_size is typedef of size_t    </para>
</entry></row>
<row>
<entry thead="no" align='right'><para>adlx_handle   </para>
</entry><entry thead="no" align='left'><para>adlx_handle is typedef of void*    </para>
</entry></row>
<row>
<entry thead="no" align='right'><para>adlx_double   </para>
</entry><entry thead="no" align='left'><para>adlx_double is typedef of double    </para>
</entry></row>
<row>
<entry thead="no" align='right'><para>adlx_float   </para>
</entry><entry thead="no" align='left'><para>adlx_float is typedef of float    </para>
</entry></row>
<row>
<entry thead="no" align='right'><para>adlx_void   </para>
</entry><entry thead="no" align='left'><para>adlx_void is typedef of void    </para>
</entry></row>
<row>
<entry thead="no" align='right'><para>adlx_int   </para>
</entry><entry thead="no" align='left'><para>adlx_int is typedef of adlx_int32    </para>
</entry></row>
<row>
<entry thead="no" align='right'><para>adlx_uint   </para>
</entry><entry thead="no" align='left'><para>adlx_uint is typedef of adlx_uint32    </para>
</entry></row>
<row>
<entry thead="no" align='right'><para>adlx_ulong   </para>
</entry><entry thead="no" align='left'><para>adlx_ulong is typedef of unsigned long    </para>
</entry></row>
<row>
<entry thead="no" align='right'><para>adlx_bool   </para>
</entry><entry thead="no" align='left'><para>adlx_bool is typedef of bool   </para>
</entry></row>
</table>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
