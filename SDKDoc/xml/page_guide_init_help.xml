<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="page_guide_init_help" kind="page">
    <compoundname>page_guide_init_help</compoundname>
    <title>Initializing ADLX with the ADLX Helpers</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>It is recommended to load and initialize ADLX with ADLX Helper code. The ADLX Helper code has native support for C and C++. When programming in C#, Java, or Python, use the ADLX Helper code from the binding wrapper in the selected language to access ADLX.</para>
<para><heading level="2">To use ADLX in a C++ application</heading>
</para>
<para>To access ADLX functionality from a C++ based application,<orderedlist>
<listitem><para>Start a new C++ application.</para>
</listitem><listitem><para>In the application, include the following files:</para>
<para><computeroutput>a. /SDK/ADLXHelper/Windows/Cpp/ADLXHelper.h</computeroutput></para>
<para><computeroutput>b. /SDK/ADLXHelper/Windows/Cpp/ADLXHelper.cpp</computeroutput></para>
<para><computeroutput>c. /SDK/Platform/Windows/WinAPIs.cpp</computeroutput></para>
</listitem><listitem><para>Create an instance of the <ref refid="page__a_d_l_x_cpp_help" kindref="compound">ADLXHelper</ref> class.</para>
</listitem><listitem><para>Call the <ref refid="page_cpp_help_initialize" kindref="compound">Initialize</ref> method in the Helper object.</para>
</listitem><listitem><para>Call the <ref refid="page_cpp_help_get_system_services" kindref="compound">GetSystemServices</ref> method in the Helper object.</para>
<para><bold>Result:</bold> Access to the <ref refid="_d_o_x__i_a_d_l_x_system" kindref="compound">IADLXSystem</ref> interface is provided.</para>
<para><bold>Note:</bold> You can access the required ADLX functionality from the <ref refid="_d_o_x__i_a_d_l_x_system" kindref="compound">IADLXSystem</ref> interface.</para>
</listitem><listitem><para>Call <ref refid="page_cpp_help_terminate" kindref="compound">Terminate</ref> in the Helper object.</para>
<para><bold>Result:</bold> Resources utilized by ADLX are released, and the ADLX library is unloaded.</para>
</listitem></orderedlist>
</para>
<para>For more information, see <ref refid="page_sample_cpp" kindref="compound">C++ samples</ref>.</para>
<para><heading level="2">To use ADLX in a C application</heading>
</para>
<para>To access ADLX functionality from a C based application,<orderedlist>
<listitem><para>Start a new C application.</para>
</listitem><listitem><para>In the application, include the following files:</para>
<para><computeroutput>a. /SDK/ADLXHelper/Windows/C/ADLXHelper.h</computeroutput></para>
<para><computeroutput>b. /SDK/ADLXHelper/Windows/C/ADLXHelper.c</computeroutput></para>
<para><computeroutput>c. /SDK/Platform/Windows/WinAPIs.c</computeroutput></para>
</listitem><listitem><para>Call the <ref refid="page_c_help_a_d_l_x_helper__initialize" kindref="compound">ADLXHelper_Initialize</ref> function that is declared in the <computeroutput>ADLXHelper.h</computeroutput> file.</para>
</listitem><listitem><para>Call the <ref refid="page_c_help_a_d_l_x_helper__get_system_services" kindref="compound">ADLXHelper_GetSystemServices</ref> function.</para>
<para><bold>Result:</bold> Access to the <ref refid="_d_o_x__i_a_d_l_x_system" kindref="compound">IADLXSystem</ref> interface is provided.</para>
<para><bold>Note:</bold> You can access the required ADLX functionality from the <ref refid="_d_o_x__i_a_d_l_x_system" kindref="compound">IADLXSystem</ref> interface.</para>
</listitem><listitem><para>Call <ref refid="page_c_help_a_d_l_x_helper__terminate" kindref="compound">ADLXHelper_Terminate</ref> in the helper object to release the resources utilized by ADLX.</para>
<para><bold>Result:</bold> The ADLX library is unloaded.</para>
</listitem></orderedlist>
</para>
<para>For more information, see <ref refid="page_sample_c" kindref="compound">C samples</ref>.</para>
<para><heading level="2">To initialize ADLX in a C# application</heading>
</para>
<para>Follow these steps to initialize ADLX in a C# application.<orderedlist>
<listitem><para>Start a new C# application.</para>
</listitem><listitem><para>Import all the *.cs files from the ADLX binding wrapper for C#.</para>
</listitem><listitem><para>Create an instance of the <ref refid="page__a_d_l_x_cpp_help" kindref="compound">ADLXHelper</ref> class.</para>
</listitem><listitem><para>Call the <ref refid="page_cpp_help_initialize" kindref="compound">Initialize</ref> method in the Helper object.</para>
</listitem><listitem><para>Call the <ref refid="page_cpp_help_get_system_services" kindref="compound">GetSystemServices</ref> method in the Helper object.</para>
<para><bold>Result:</bold> The <ref refid="_d_o_x__i_a_d_l_x_system" kindref="compound">IADLXSystem</ref> interface is accessible.</para>
<para><bold>Note:</bold> The <ref refid="_d_o_x__i_a_d_l_x_system" kindref="compound">IADLXSystem</ref> interface provides access to ADLX functionality.</para>
</listitem><listitem><para>Call <ref refid="page_cpp_help_terminate" kindref="compound">Terminate</ref> in the Helper object.</para>
<para><bold>Result:</bold> Resources utilized by ADLX are released, and the ADLX library is unloaded.</para>
</listitem></orderedlist>
</para>
<para>For more information, see <ref refid="page_sample_cs" kindref="compound">C# samples</ref></para>
<para><heading level="2">To initialize ADLX in a Java application</heading>
</para>
<para>Follow these steps to initialize ADLX in a Java application.<orderedlist>
<listitem><para>Start a new Java application.</para>
</listitem><listitem><para>Import all the Java files from the ADLX binding wrapper for Java.</para>
</listitem><listitem><para>Create an instance of the <ref refid="page__a_d_l_x_cpp_help" kindref="compound">ADLXHelper</ref> class.</para>
</listitem><listitem><para>Call the <ref refid="page_cpp_help_initialize" kindref="compound">Initialize</ref> method in the Helper object.</para>
</listitem><listitem><para>Call the <ref refid="page_cpp_help_get_system_services" kindref="compound">GetSystemServices</ref> method in the Helper object.</para>
<para><bold>Result:</bold> The <ref refid="_d_o_x__i_a_d_l_x_system" kindref="compound">IADLXSystem</ref> interface is accessible.</para>
<para><bold>Note:</bold> The <ref refid="_d_o_x__i_a_d_l_x_system" kindref="compound">IADLXSystem</ref> interface provides access to ADLX functionality.</para>
</listitem><listitem><para>Call <ref refid="page_cpp_help_terminate" kindref="compound">Terminate</ref> in the Helper object.</para>
<para><bold>Result:</bold> Resources utilized by ADLX are released, and the ADLX library is unloaded.</para>
</listitem></orderedlist>
</para>
<para>For more information, see <ref refid="page_sample_java" kindref="compound">Java samples</ref>.</para>
<para><heading level="2">To initialize ADLX in a Python application</heading>
</para>
<para>Follow these steps to initialize ADLX in a Python application.<orderedlist>
<listitem><para>Start a new Python application.</para>
</listitem><listitem><para>Import the <computeroutput>ADLXPybind.pyd</computeroutput> package from the ADLX binding wrapper for Python.</para>
</listitem><listitem><para>Create an instance of the <ref refid="page__a_d_l_x_cpp_help" kindref="compound">ADLXHelper</ref> class.</para>
</listitem><listitem><para>Call the <ref refid="page_cpp_help_initialize" kindref="compound">Initialize</ref> method in the Helper object.</para>
</listitem><listitem><para>Call the <ref refid="page_cpp_help_get_system_services" kindref="compound">GetSystemServices</ref> method in the Helper object.</para>
<para><bold>Result:</bold> The <ref refid="_d_o_x__i_a_d_l_x_system" kindref="compound">IADLXSystem</ref> interface is accessible.</para>
<para><bold>Note:</bold> The <ref refid="_d_o_x__i_a_d_l_x_system" kindref="compound">IADLXSystem</ref> interface provides access to ADLX functionality.</para>
</listitem><listitem><para>Call <ref refid="page_cpp_help_terminate" kindref="compound">Terminate</ref> in the Helper object.</para>
<para><bold>Result:</bold> Resources utilized by ADLX are released, and the ADLX library is unloaded.</para>
</listitem></orderedlist>
</para>
<para>For more information, see <ref refid="page_sample_py" kindref="compound">Python samples</ref>. </para>
    </detaileddescription>
    <location file="D:/AMD_Git/adlx_release/drivers/ADLX/docs/Config/ADLXProgrammingGuide/initADLXwithHelp.md"/>
  </compounddef>
</doxygen>
